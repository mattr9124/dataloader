<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.force</groupId>
  <artifactId>dataloader</artifactId>
  <packaging>jar</packaging>
  <version>51.0.1</version>
  <name>Data Loader</name>
  <url>https://github.com/forcedotcom/dataloader</url>
  <organization>
    <name>salesforce.com</name>
    <url>http://salesforce.com</url>
  </organization>

  <properties>
    <force.wsc.version>51.0.0</force.wsc.version>
    <force.partner.api.version>${force.wsc.version}</force.partner.api.version>
    <build.year>2021</build.year>
    <java.compile.version>11</java.compile.version>
    <codesign>DONTSIGN</codesign>
    <spring.version>5.2.7.RELEASE</spring.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <config.additional.properties></config.additional.properties>
    <jarsigner.skip>true</jarsigner.skip>

    <!-- test properties -->
    <test.endpoint>http://testendpoint</test.endpoint>
    <test.user.default>admin@org.com</test.user.default>
    <test.user.restricted>standard@org.com</test.user.restricted>
    <test.password></test.password><!-- use the encrypted password -->
    <test.redirect>false</test.redirect>
  </properties>

  <repositories>
    <repository>
      <id>local-proj-repo</id>
      <name>Project Local Repository</name>
      <layout>default</layout>
      <url>file://${basedir}/local-proj-repo/</url>
    </repository>
    <repository>
      <id>maven-eclipse-repo</id>
      <url>http://maven-eclipse.github.io/maven</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-wsc</artifactId>
      <version>${force.wsc.version}</version>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-partner-api</artifactId>
      <version>${force.partner.api.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.8.0</version>
    </dependency>

<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.14.0</version>
    </dependency>

<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.14.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.13</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.platform</groupId>
      <artifactId>org.eclipse.jface</artifactId>
      <version>3.22.0</version>
    </dependency>
<!-- Testing dependencies -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.197</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>2.0.2-beta</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <filters>
      <filter>src/test/resources/testfilter.properties</filter>
    </filters>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>osxappbundle-maven-plugin</artifactId>
          <version>1.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <delimiters>
              <delimiter>${*}</delimiter>
            </delimiters>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
              <nonFilteredFileExtension>swf</nonFilteredFileExtension>
              <nonFilteredFileExtension>jpeg</nonFilteredFileExtension>
              <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
              <nonFilteredFileExtension>png</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
        </configuration>
      </plugin>
	
      <!-- we might want to use the maven-shade-plugin in the future instead 
        of maven-assembly-plugin -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.salesforce.dataloader.process.DataLoaderRunner</mainClass>
            </manifest>
          </archive>
          <descriptors>
            <descriptor>src/main/assembly/uber.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-uber-jar</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>shade</shadedClassifierName> <!-- Any name that makes sense -->
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.salesforce.dataloader.process.DataLoaderRunner</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.tooling</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${java.compile.version}</source>
          <target>${java.compile.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
          <dependencies>
              <dependency>
                  <groupId>org.apache.maven.surefire</groupId>
                  <artifactId>surefire-junit4</artifactId>
                  <version>3.0.0-M2</version>
              </dependency>
          </dependencies>
        <configuration>
          <excludes>
            <!-- CORE UNIT TESTS: revise to keep this list fast and connectivity free -->
            <exclude>**/client/**</exclude>
            <exclude>**/dyna/SObjectReferenceConverterTest.*</exclude>
            <exclude>**/integration/**</exclude>
            <exclude>**/mapping/LoadMapperTest.*</exclude>
            <exclude>**/mapping/SOQLMapperTest.*</exclude>
            <exclude>**/process/**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.8.0</version>
          <configuration>
              <header>license.txt</header>
              <excludes>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.html</exclude>
                  <exclude>**/*.txt</exclude>
                  <exclude>**/*.xml</exclude>
                  <exclude>**/*.md</exclude>
                  <exclude>**/*.nsi</exclude>
                  <exclude>**/*.properties</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>windows-dependencies/**</exclude>
                  <exclude>local-proj-repo/**</exclude>
                  <exclude>src/main/resources/**</exclude>
                  <exclude>src/test/resources/**</exclude>
                  <exclude>.gitignore</exclude>
                  <exclude>.gitmodules</exclude>
                  <exclude>**/*.csv</exclude>
                  <exclude>**/*.rtf</exclude>
                  <exclude>**/*.sdl</exclude>
                  <exclude>**/*.log</exclude>
                  <exclude>**/*.command</exclude>
                  <exclude>**/*.jks</exclude>
                  <exclude>release/**</exclude>
                  <exclude>yoursway-create-dmg/**</exclude>
                  <exclude>src/main/nsis/**</exclude>
                  <exclude>configs/**</exclude>
              </excludes>
          </configuration>
          <executions>
              <execution>
                  <phase>package</phase>
                  <goals>
                      <goal>check</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jarsigner-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>sign</id>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>target/dataloader-${project.version}-uber.jar</archive>
          <skip>${jarsigner.skip}</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>mac64</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>x86_64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>local.swt</groupId>
          <artifactId>swtmac</artifactId>
          <version>4.18</version>
        </dependency>
      </dependencies>
      <properties>
          <OSType>mac</OSType>
      </properties>
    </profile>

    <profile>
      <id>win64</id>
      <activation>
        <os>
          <family>Windows</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>local.swt</groupId>
          <artifactId>swtwin</artifactId>
          <version>4.18</version>
        </dependency>
      </dependencies>
      <properties>
          <OSType>win</OSType>
      </properties>
    </profile>
    
    <profile>
      <id>zip</id>
      <build>
        <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-antrun-plugin</artifactId>
	        <version>1.8</version>
	        <executions>
	           <execution>
	             <phase>package</phase>
	             <goals>
	               <goal>run</goal>
	             </goals>
	           </execution>
	         </executions>
	         <configuration>
	           <tasks>      
	             <echo>creating version-specific files for the target OS: ${OSType}</echo>
	             <mkdir dir="${basedir}/target/${OSType}"/>
	             <copydir src="${basedir}/release/${OSType}" dest="${basedir}/target/${OSType}"/>
	             <replace dir="${basedir}/target/${OSType}/" token="@@FULL_VERSION@@" value="${version}"/>
	             <replace dir="${basedir}/target/${OSType}/" token="@@MIN_JAVA_VERSION@@" value="${java.compile.version}"/>
	             <chmod file="${basedir}/target/${OSType}/*" perm="755" />
	
	             <echo>copying uber jar to OS-specific folder for the target OS: ${OSType}</echo>
	             <copy file="${basedir}/target/dataloader-${version}-uber.jar" 
	                   todir="${basedir}/target/${OSType}"/>
	             
	             <echo>zip OS-specific folder</echo>
	             <zip update="true" destfile="${basedir}/target/${OSType}/dataloader_${OSType}.zip" >
	               <zipfileset dirmode="755" filemode="755" 
	                           dir="${basedir}/target/${OSType}" />
	             </zip>
	
	            </tasks>
	          </configuration>
	      </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.13</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit4</artifactId>
                <version>2.13</version>
              </dependency>
            </dependencies>
            <configuration>
              <excludes>
                <!-- INTEGRATION UNIT TESTS: revise to remove works in progress -->
                <exclude>**/integration/**</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
